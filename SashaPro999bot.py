import random
import telebot, wikipedia, re
from telebot import types

bot = telebot.TeleBot('')

@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('e:\–±–æ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏\hi.png', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫")
    item2 = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("–ò–¢")
    item4 = types.KeyboardButton("–ú–∏–Ω—Å–∫")
    markup.add(item1, item2, item3, item4)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n –Ø - <b>{1.first_name}</b>, "
                     "–Ø —É–º–Ω—ã–π –±–æ—Ç, –≤—Å–µ–∑–Ω–∞–π–∫–∞, –ø–∏—à–∏ —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º - –Ω–∞–π–¥—É —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ Wikipedia
wikipedia.set_lang("ru")

# –ß–∏—Å—Ç–∏–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ –≤ Wikipedia –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –µ–≥–æ —Ç—ã—Å—è—á–µ–π —Å–∏–º–≤–æ–ª–æ–≤
def getwiki(s):
    try:
        ny = wikipedia.page(s)
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —Ç—ã—Å—è—á—É —Å–∏–º–≤–æ–ª–æ–≤
        wikitext = ny.content[:1000]
        # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ç–æ—á–∫–∞–º
        wikimas = wikitext.split('.')
        # –û—Ç–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–ï –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏
        wikimas = wikimas[:-1]
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        wikitext2 = ''
        # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º, –≥–¥–µ –Ω–µ—Ç –∑–Ω–∞–∫–æ–≤ ¬´—Ä–∞–≤–Ω–æ¬ª (—Ç–æ –µ—Å—Ç—å –≤—Å–µ, –∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
        for x in wikimas:
            if not ('==' in x):
                # –ï—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –æ—Å—Ç–∞–ª–æ—Å—å –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –∫ –Ω–∞—à–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Ç–µ—Ä—è–Ω–Ω—ã–µ –ø—Ä–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫ —Ç–æ—á–∫–∏ –Ω–∞ –º–µ—Å—Ç–æ
                if (len((x.strip())) > 3):
                    wikitext2 = wikitext2 + x + '.'
            else:
                break
        # –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π —É–±–∏—Ä–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
        wikitext2 = re.sub('\([^()]*\)', '', wikitext2)
        wikitext2 = re.sub('\([^()]*\)', '', wikitext2)
        wikitext2 = re.sub('\{[^\{\}]*\}', '', wikitext2)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        return wikitext2
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å –º–æ–¥—É–ª—å wikipedia –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ
    except Exception as e:
        return '–í —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º :('

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —é–∑–µ—Ä–∞
@bot.message_handler(content_types=["text"])
def handle_text(message):
    bot.send_message(message.chat.id, getwiki(message.text))
    if message.chat.type == 'private':
        if message.text == '–ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            item3 = types.InlineKeyboardButton("–õ—É—á—à–µ –≤—Å–µ—Ö", callback_data='excellent')
            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, ':)')

#–ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö–∞–∫ –¥–µ–ª–∞?"
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            elif call.data == 'excellent':
                bot.send_message(call.message.chat.id, '–°—É–ø–µ—Ä!!:))')
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ö–∞–∫ –¥–µ–ª–∞? üòä",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!")

    except Exception as e:
        print(repr(e))

# RUN
bot.polling(none_stop=True)
